<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.web.vop.persistence.InquiryMapper">

	<resultMap type="com.web.vop.domain.InquiryVO"
      id="inquiryResultMap">
      <id property="inquiryId" column="INQUIRY_ID" /> 
      <result property="memberId" column="MEMBER_ID" />
      <result property="productId" column="PRODUCT_ID"/>
      <result property="inquiryContent" column="INQUIRY_CONTENT"/>
      <result property="inquiryDateCreated" column="INQUIRY_DATE_CREATED"/>
   </resultMap>
   
   <resultMap type="com.web.vop.domain.InquiryDTO"
      id="inquiryDTOResultMap">
      <id property="inquiryId" column="INQUIRY_ID" /> 
      <result property="inquiryMemberId" column="INQUIRY_MEMBER_ID" />
      <result property="productId" column="PRODUCT_ID"/>
      <result property="inquiryContent" column="INQUIRY_CONTENT"/>
      <result property="inquiryDateCreated" column="INQUIRY_DATE_CREATED"/>
      <result property="answerId" column="ANSWER_ID"/>
   	  <result property="answerMemberId" column="ANSWER_MEMBER_ID"/>
	  <result property="answerContent" column="ANSWER_CONTENT"/>
	  <result property="answerDateCreated" column="ANSWER_DATE_CREATED"/>   
	  <result property="answerInquiryId" column="ANSWER_INQUIRY_ID"/>   
   </resultMap>
	
	
	<!-- 댓글(문의) 입력 -->
   <insert id="insertInquiry">
      <!-- INSERT INTO INQUIRY 
      (INQUIRY_ID, MEMBER_ID, PRODUCT_ID, INQUIRY_CONTENT, INQUIRY_DATE_CREATED)
	  VALUES (INQUIRY_SEQ.NEXTVAL , #{memberId}, #{productId}, #{inquiryContent}, SYSDATE) -->
	  INSERT INTO INQUIRY 
      (INQUIRY_ID, MEMBER_ID, PRODUCT_ID, INQUIRY_CONTENT, INQUIRY_DATE_CREATED)
	  VALUES (0, #{memberId}, #{productId}, #{inquiryContent}, CURRENT_TIMESTAMP())
   </insert>
   
    <!-- 댓글(문의) 전체 검색 -->
   <select id="selectListByInquiry" resultMap="inquiryResultMap">
      SELECT * FROM INQUIRY
      WHERE PRODUCT_ID = #{productId}
      ORDER BY INQUIRY_ID
   </select> 
   
   <!-- 댓글(문의) 전체 검색 (페이징 처리) -->
	<select id="allList" resultMap="inquiryResultMap">
    	SELECT * FROM (
        	SELECT INQUIRY.*, ROW_NUMBER() OVER (ORDER BY INQUIRY_ID DESC) RN
        	FROM INQUIRY
   		) I
    	WHERE RN BETWEEN #{pagination.start} AND #{pagination.end}
	</select>
	
	<!-- 댓글(문의) 전체 검색(해당 상품의 문의 수) 페이징 처리-->
   <select id="allListPaging" resultType="Integer">
   	  SELECT COUNT(PRODUCT_ID) FROM INQUIRY 
   </select>
   
   <!-- 댓글(문의) 전체 검색 (페이징 처리) -->
	<select id="selectListByInquiryPaging" resultMap="inquiryResultMap">
    	SELECT * FROM (
        	SELECT INQUIRY.*, ROW_NUMBER() OVER (ORDER BY INQUIRY_ID DESC) RN
        	FROM INQUIRY
        	WHERE PRODUCT_ID = #{productId}
   		) I
    	WHERE RN BETWEEN #{pagination.start} AND #{pagination.end}
	</select>
	
	<!-- 댓글(문의) 전체 검색 (페이징 처리) MEMBER_ID -->
	<select id="selectListByInquiryMemberIdPaging" resultMap="inquiryResultMap">
    	SELECT * FROM (
        	SELECT INQUIRY.*, ROW_NUMBER() OVER (ORDER BY INQUIRY_ID DESC) RN
        	FROM INQUIRY
        	WHERE MEMBER_ID = #{memberId}
   		) I
    	WHERE RN BETWEEN #{pagination.start} AND #{pagination.end}
	</select>
	
	<!-- 댓글(문의) 전체 검색(해당 상품의 문의 수) 페이징 처리-->
   <select id="selectListByInquiryMemberIdCnt" resultType="Integer">
   	  SELECT COUNT(MEMBER_ID) FROM INQUIRY 
   	  WHERE MEMBER_ID = #{memberId}
   </select>
   
   <!-- 댓글(문의) 전체 검색(해당 상품의 문의 수) 페이징 처리-->
   <select id="selectListByInquiryCnt" resultType="Integer">
   	  SELECT COUNT(PRODUCT_ID) FROM INQUIRY 
   	  WHERE PRODUCT_ID = #{productId}
   </select>
   
   <!-- 댓글(문의) productId 그리고 memberId통해 검색 -->
   <!-- 우선 사용 안함 -->
   <select id="selectByInquiry" resultMap="inquiryResultMap">
   		SELECT * FROM INQUIRY
	 	WHERE PRODUCT_ID = #{productId} AND MEMBER_ID = #{memberId}
   </select>
   
	 <!-- 댓글(문의) 수정 --><!-- 수정 기능 넣을지 말지 고민 중 -->
   <update id="updateInquiry">
      UPDATE INQUIRY
      SET INQUIRY_CONTENT = #{inquiryContent}
      WHERE PRODUCT_ID = #{productId} AND MEMBER_ID = #{memberId}
   </update>
   
   <!-- 댓글(문의) 삭제 -->
   <delete id="deleteInquiry">
      DELETE FROM INQUIRY
      WHERE PRODUCT_ID = #{productId} AND MEMBER_ID = #{memberId}
   </delete>
   
   <!-- 시험 중인 조인 코드 -->
   <select id="selectListByInquiryMemberIdPagingNew" 
   resultMap= "inquiryDTOResultMap">
   	WITH INQUIRY_DTO AS (
    	SELECT INQUIRY.*, 
    	ROW_NUMBER() OVER (ORDER BY INQUIRY_ID DESC) AS RN
    	FROM INQUIRY
    	WHERE MEMBER_ID = #{memberId}
	)
	SELECT 
    	fi.INQUIRY_ID,
    	fi.MEMBER_ID AS INQUIRY_MEMBER_ID,
    	fi.PRODUCT_ID,
    	fi.INQUIRY_CONTENT,
    	fi.INQUIRY_DATE_CREATED,
    	a.ANSWER_ID,
    	a.MEMBER_ID AS ANSWER_MEMBER_ID,
    	a.ANSWER_CONTENT,
    	a.ANSWER_DATE_CREATED,
    	a.INQUIRY_ID AS ANSWER_INQUIRY_ID
	FROM INQUIRY_DTO fi 
	LEFT JOIN ANSWER a ON fi.INQUIRY_ID = a.INQUIRY_ID
	WHERE fi.RN BETWEEN #{pagination.start} AND #{pagination.end}
	ORDER BY fi.INQUIRY_ID DESC, a.ANSWER_DATE_CREATED DESC
   </select>

</mapper>